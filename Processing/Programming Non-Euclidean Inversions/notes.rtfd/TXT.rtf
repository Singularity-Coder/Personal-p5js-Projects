{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .SFNS-Regular_wdth_opsz180000_GRAD_wght2580000;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 .SFNS-Regular_wdth_opsz120000_GRAD_wght2580000;
\f3\fnil\fcharset0 HelveticaNeue-Bold;\f4\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red202\green202\blue202;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c83229\c83229\c83125;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh16080\viewkind0
\deftab720
\pard\pardeftab720\sa320\partightenfactor0

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
Programming Non-Euclidean Inversions\
\pard\pardeftab720\sa320\partightenfactor0

\f1\b0\fs28 \cf2 In this project we distort a euclidean image into a non-euclidean one. These are geometric transformations that take an image or a tesselation in euclid space & convert it into a non-euclid space. Ex: Earth is non-euclidean. But day to day landscape is euclidean.\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b\fs36 \cf2 Tessellation\
\pard\pardeftab720\sa320\partightenfactor0

\f3\fs28 \cf2 Tessellation
\f1\b0 \'a0(also spelled\'a0
\f4\i tessellation
\f1\i0 ) is the process of covering a flat surface using one or more geometric shapes, called\'a0
\f3\b tiles
\f1\b0 , with\'a0
\f3\b no overlaps and no gaps
\f1\b0 . The concept is used in\'a0
\f3\b mathematics, art, and architecture
\f1\b0 , and is especially common in\'a0
\f3\b geometry
\f1\b0 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f3\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Regular tessellation
\f1\b0 : Uses only one type of regular polygon (e.g., equilateral triangles, squares, or hexagons).\
\ls1\ilvl0
\f3\b \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Semi-regular tessellation
\f1\b0 : Uses more than one type of regular polygon, arranged in a repeating pattern.\
\ls1\ilvl0
\f3\b \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Aperiodic tessellation
\f1\b0 : Does not repeat regularly; Penrose tilings are a famous example.\
\ls1\ilvl0
\f3\b \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
3D tessellation
\f1\b0 : Called\'a0
\f4\i space filling
\f1\i0 , used in crystallography and 3D modeling.\
\pard\pardeftab720\sa320\partightenfactor0

\f3\b \cf2 Example
\f1\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
A tiled floor with repeating squares\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Honeycomb structures in nature (hexagonal)\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b\fs36 \cf2 \
Geometric Reflection\
\pard\pardeftab720\sa320\partightenfactor0

\f1\b0\fs28 \cf2 2 points are at equi distance from the line of reflection which is like a divider and they both are on a line that is perperndicular to the line of reflection. \
\pard\pardeftab720\sa320\partightenfactor0
\cf2 {{\NeXTGraphic Screenshot 2025-05-08 at 10.28.30.png \width20200 \height12320 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\pardeftab720\sa320\partightenfactor0
\cf2 Any transformation we do on circles does not meet the definition of reflection. We do inversion. Dist to green * Dist to red = radius ^ 2. Circular inversion. Get x and y points.\
\pard\pardeftab720\sa320\partightenfactor0
\cf2 {{\NeXTGraphic Screenshot 2025-05-08 at 10.32.29.png \width13960 \height8480 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\sa320\partightenfactor0
\cf2 \
\pard\pardeftab720\sa320\partightenfactor0
\cf2 {{\NeXTGraphic Screenshot 2025-05-08 at 10.29.35.png \width26400 \height19080 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\sa320\partightenfactor0
\cf2 \
\pard\pardeftab720\sa320\partightenfactor0
\cf2 \
\
\
\
\
\
\
\
\
\
\
}